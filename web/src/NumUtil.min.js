var version = "1.0.0.0", NumUtil = function () { return new NumUtil.Core.init }; NumUtil.Core = NumUtil.prototype = { Version: version, Constructor: NumUtil, Clone: function (t) { var r = arguments.callee; if (1 === arguments.length) return r.prototype = t, new r }, NumberWithCommas: function (t) { var r = t.toString().split("."); return r[0] = r[0].replace(/,/g, ""), r[0] = r[0].replace(/\B(?=(\d{3})+(?!\d))/g, ","), r.join(".") }, NumberWithoutCommas: function (t) { var r = t.toString().split("."); return r[0] = r[0].replace(/,/g, ""), r.join(".") }, ParseFloatNoZeros: function (t, r) { if (isNaN(t)) return t; var e = parseFloat(t).toFixed(r).replace(/^0+|0+$/g, StrUtil.Core.EmptyString); if (isNaN(e) || void 0 === e || null === e || e.length <= 0) return t; var i = e; return "." === e.charAt(e.length - 1) && (i = e.substring(0, e.length - 1)), "." === i.charAt(0) ? "0" + i : i }, ParseFloatNoZerosWithoutCommas: function (t, r) { if (StrUtil.Core.IsNullOrEmpty(t)) return t; if (t.indexOf(",") >= 0 && (t = t.replace(/,/g, StrUtil.Core.EmptyString)), isNaN(t)) return t; var e = parseFloat(t).toFixed(r).replace(/^0+|0+$/g, StrUtil.Core.EmptyString); if (isNaN(e) || StrUtil.Core.IsNullOrEmpty(e)) return t; var i = e; return "." === e.charAt(e.length - 1) && (i = e.substring(0, e.length - 1)), "." === i.charAt(0) ? "0" + i : i }, ParseFloatWithCommas: function (t) { var r = t.toString().split("."); return r[0] = r[0].replace(/,/g, StrUtil.Core.EmptyString), r[0] = r[0].replace(/\B(?=(\d{3})+(?!\d))/g, ","), r.join(".") }, ParseFloatWithoutCommas: function (t) { var r = t.toString().split("."); return r[0] = r[0].replace(/,/g, StrUtil.Core.EmptyString), r.join(".") }, ParseIntWithDefault: function (t, r) { var e = parseInt(t); if (isNaN(e)) { var i = parseInt(r); return isNaN(i) ? r : i } } };